DTO (Payloads) => 
Payloads são os dados que você envia para a API dentro do corpo da requisição (geralmente em JSON). 
Eles servem para informar à API o que você quer que ela faça, fornecendo as informações necessárias para criar, atualizar, buscar ou responder a algo.
Quando você quer criar algo novo (ex: usuário, sala, convite), o payload contém os dados desse novo recurso.
Para atualizar informações, o payload traz os novos dados a serem aplicados.
Para filtrar ou buscar dados específicos, o payload pode conter critérios ou parâmetros da busca.
Para executar ações específicas (como responder a um convite), o payload traz os detalhes que indicam qual ação tomar.
Payload é o conjunto de dados enviados para a API para que ela entenda a sua intenção e processe a requisição corretamente.

EndpointRespondInvitePayload =>
é um tipo que representa os dados enviados para a API ao responder um convite. 
Ele contém o ID do convite e a resposta (aceitar ou recusar). Pode existir em diferentes namespaces para fins de organização ou teste.


* Código para colocar opção de JWT no Swagger

builder.Services.AddSwaggerGen(c =>
{
    c.SwaggerDoc("v1", new() { Title = "ThePixeler API", Version = "v1" });

    // Adiciona suporte para autenticação JWT
    c.AddSecurityDefinition("Bearer", new OpenApiSecurityScheme
    {
        Name = "Authorization",
        Type = SecuritySchemeType.ApiKey,
        Scheme = "Bearer",
        BearerFormat = "JWT",
        In = ParameterLocation.Header,
        Description = "Insira o token JWT no campo abaixo. Exemplo: Bearer {seu_token}"
    });

    c.AddSecurityRequirement(new OpenApiSecurityRequirement
    {
        {
            new OpenApiSecurityScheme
            {
                Reference = new OpenApiReference
                {
                    Type = ReferenceType.SecurityScheme,
                    Id = "Bearer"
                }
            },
            Array.Empty<string>()
        }
    });
});
